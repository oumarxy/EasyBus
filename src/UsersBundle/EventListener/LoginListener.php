<?phpnamespace UsersBundle\EventListener;use Symfony\Component\Security\Http\Event\InteractiveLoginEvent;use Symfony\Component\HttpKernel\KernelEvents;use Symfony\Component\Security\Core\Security;use Symfony\Component\HttpFoundation\RedirectResponse;use Symfony\Bundle\FrameworkBundle\Routing\Router;use Symfony\Component\HttpKernel\Event\FilterResponseEvent;use Symfony\Component\EventDispatcher\EventDispatcherInterface;use Symfony\Component\Security\Core\Authorization\AuthorizationChecker;class LoginListener {    private $authorizationChecker;    private $router;    private $dispatcher;    public function __construct(AuthorizationChecker $authorizationChecker, Router $router, EventDispatcherInterface $dispatcher) {        $this->authorizationChecker = $authorizationChecker;        $this->router = $router;        $this->dispatcher = $dispatcher;    }    public function onSecurityInteractiveLogin(InteractiveLoginEvent $event) {        if ($this->authorizationChecker->isGranted('IS_AUTHENTICATED_FULLY')) {            $user = $event->getAuthenticationToken()->getUser();            if ($user->getLastLogin() === null) {                $this->dispatcher->addListener(KernelEvents::RESPONSE, array(                    $this,                    'onKernelResponse'                ));            }        }    }    public function onKernelResponse(FilterResponseEvent $event) {        $response = new RedirectResponse($this->router->generate('fos_user_change_password'));        $event->setResponse($response);    }}